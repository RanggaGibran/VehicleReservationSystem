@model VehicleReservationSystem.ViewModels.ReservationViewModel

@{
    ViewData["Title"] = "Buat Reservasi Baru";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <d                                <!-- No Driver Option -->
                                <div class="no-driver-option mt-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="driverSelection" id="noDriverOption" value="" checked onclick="selectNoDriver()">
                                        <label class="form-check-label" for="noDriverOption">
                                            <strong>Tentukan pengemudi nanti</strong>
                                            <br><small class="text-muted">Pengemudi akan ditentukan oleh admin setelah reservasi disetujui</small>
                                        </label>
                                    </div>
                                </div>   <h1 class="mb-1">
            <i class="bi bi-plus-circle text-primary me-2"></i>Buat Reservasi Kendaraan
        </h1>
        <p class="text-muted mb-0">
            <i class="bi bi-info-circle me-1"></i>Isi formulir di bawah untuk membuat reservasi kendaraan operasional
        </p>
    </div>
    <div>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-1"></i>Kembali ke Daftar
        </a>
    </div>
</div>

<!-- Progress Steps -->
<div class="card mb-4">
    <div class="card-body">
        <div class="row text-center">
            <div class="col-3">
                <div class="step-circle active">
                    <i class="bi bi-person-fill"></i>
                </div>
                <small class="text-muted d-block mt-2">Informasi Pemohon</small>
            </div>
            <div class="col-3">
                <div class="step-circle">
                    <i class="bi bi-truck"></i>
                </div>
                <small class="text-muted d-block mt-2">Pilih Kendaraan</small>
            </div>
            <div class="col-3">
                <div class="step-circle">
                    <i class="bi bi-calendar-event"></i>
                </div>
                <small class="text-muted d-block mt-2">Jadwal & Tujuan</small>
            </div>
            <div class="col-3">
                <div class="step-circle">
                    <i class="bi bi-check-circle"></i>
                </div>
                <small class="text-muted d-block mt-2">Persetujuan</small>
            </div>
        </div>
    </div>
</div>

<div class="card modern-card">
    <div class="card-header bg-gradient-primary text-white">
        <h5 class="mb-0">
            <i class="bi bi-clipboard-data me-2"></i>Detail Reservasi
        </h5>
    </div>
    <div class="card-body">
        <form asp-action="Create" method="post" id="reservationForm">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger d-none"></div>
            
            <!-- Step 1: Requester Information -->
            <div class="form-step active" id="step1">
                <h6 class="text-primary mb-3">
                    <i class="bi bi-person-badge me-2"></i>Informasi Pemohon
                </h6>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="RequesterId" class="form-label fw-medium">
                                <i class="bi bi-person text-muted me-1"></i>Pemohon <span class="text-danger">*</span>
                            </label>
                            <select asp-for="RequesterId" asp-items="Model.Users" class="form-select form-select-modern">
                                <option value="">-- Pilih Pemohon --</option>
                            </select>
                            <span asp-validation-for="RequesterId" class="text-danger small"></span>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="NumberOfPassengers" class="form-label fw-medium">
                                <i class="bi bi-people text-muted me-1"></i>Jumlah Penumpang <span class="text-danger">*</span>
                            </label>
                            <input asp-for="NumberOfPassengers" class="form-control form-control-modern" placeholder="Masukkan jumlah penumpang" />
                            <span asp-validation-for="NumberOfPassengers" class="text-danger small"></span>
                            <small class="text-muted">Termasuk pengemudi</small>
                        </div>
                    </div>
                </div>
                
                <div class="form-group mb-3">
                    <label asp-for="Purpose" class="form-label fw-medium">
                        <i class="bi bi-clipboard-check text-muted me-1"></i>Tujuan Penggunaan <span class="text-danger">*</span>
                    </label>
                    <select asp-for="Purpose" class="form-select form-select-modern" onchange="handlePurposeChange()">
                        <option value="">-- Pilih Tujuan --</option>
                        <option value="Inspeksi Tambang">Inspeksi Tambang</option>
                        <option value="Transportasi Karyawan">Transportasi Karyawan</option>
                        <option value="Pengiriman Material">Pengiriman Material</option>
                        <option value="Kunjungan Klien">Kunjungan Klien</option>
                        <option value="Rapat Eksternal">Rapat Eksternal</option>
                        <option value="Pengambilan Sample">Pengambilan Sample</option>
                        <option value="Lainnya">Lainnya</option>
                    </select>
                    <span asp-validation-for="Purpose" class="text-danger small"></span>
                </div>
                
                <div class="form-group mb-4" id="customPurposeDiv" style="display: none;">
                    <label class="form-label fw-medium">
                        <i class="bi bi-pencil text-muted me-1"></i>Jelaskan Tujuan Lainnya
                    </label>
                    <input type="text" class="form-control form-control-modern" id="customPurpose" placeholder="Jelaskan tujuan penggunaan kendaraan" />
                </div>
                
                <div class="d-flex justify-content-end">
                    <button type="button" class="btn btn-primary" onclick="nextStep(2)">
                        Selanjutnya <i class="bi bi-arrow-right ms-1"></i>
                    </button>
                </div>
            </div>
              <!-- Step 2: Vehicle Selection -->
            <div class="form-step" id="step2">
                <h6 class="text-primary mb-3">
                    <i class="bi bi-truck me-2"></i>Pilih Kendaraan & Pengemudi
                </h6>
                
                <div class="row">
                    <div class="col-12">
                        <div class="form-group mb-4">
                            <label asp-for="VehicleId" class="form-label fw-medium">
                                <i class="bi bi-truck text-muted me-1"></i>Pilih Kendaraan <span class="text-danger">*</span>
                            </label>
                            <div class="vehicle-selection-container">
                                <select asp-for="VehicleId" asp-items="Model.Vehicles" class="form-select form-select-modern d-none" onchange="updateVehicleDisplay(); updateAvailableDrivers()">
                                    <option value="">-- Pilih Kendaraan --</option>
                                </select>
                                
                                <!-- Custom Vehicle Cards Display -->
                                <div class="vehicle-cards-container" id="vehicleCardsContainer">
                                    <div class="alert alert-info">
                                        <i class="bi bi-info-circle me-2"></i>
                                        <strong>Memuat data kendaraan...</strong> Pastikan database telah diinisialisasi dengan data kendaraan.
                                    </div>
                                </div>
                                
                                <!-- Selected Vehicle Display -->
                                <div class="selected-vehicle-display d-none" id="selectedVehicleDisplay">
                                    <div class="card border-success">
                                        <div class="card-header bg-success text-white">
                                            <h6 class="mb-0">
                                                <i class="bi bi-check-circle me-1"></i>Kendaraan Terpilih
                                            </h6>
                                        </div>
                                        <div class="card-body" id="selectedVehicleInfo">
                                            <!-- Vehicle info will be populated by JavaScript -->
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <span asp-validation-for="VehicleId" class="text-danger small"></span>
                        </div>
                    </div>
                    
                    <div class="col-12">
                        <div class="form-group mb-3">
                            <label asp-for="DriverId" class="form-label fw-medium">
                                <i class="bi bi-person-gear text-muted me-1"></i>Pilih Pengemudi
                                <small class="text-muted">(Opsional - dapat ditentukan kemudian)</small>
                            </label>
                            <div class="driver-selection-container">
                                <select asp-for="DriverId" asp-items="Model.Drivers" class="form-select form-select-modern d-none">
                                    <option value="">-- Pilih Pengemudi --</option>
                                </select>
                                
                                <!-- Custom Driver Cards Display -->
                                <div class="driver-cards-container" id="driverCardsContainer">
                                    <div class="alert alert-info">
                                        <i class="bi bi-info-circle me-2"></i>
                                        <strong>Memuat data pengemudi...</strong> Pastikan database telah diinisialisasi dengan data pengemudi.
                                    </div>
                                </div>
                                
                                <!-- Selected Driver Display -->
                                <div class="selected-driver-display d-none" id="selectedDriverDisplay">
                                    <div class="card border-info">
                                        <div class="card-header bg-info text-white">
                                            <h6 class="mb-0">
                                                <i class="bi bi-check-circle me-1"></i>Pengemudi Terpilih
                                            </h6>
                                        </div>
                                        <div class="card-body" id="selectedDriverInfo">
                                            <!-- Driver info will be populated by JavaScript -->
                                        </div>
                                    </div>
                                </div>
                                  <!-- No Driver Option -->
                                <div class="no-driver-option mt-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="driverSelection" id="noDriverOption" value="" onclick="selectNoDriver()">
                                        <label class="form-check-label" for="noDriverOption">
                                            <strong>Tentukan pengemudi nanti</strong>
                                            <br><small class="text-muted">Pengemudi akan ditentukan oleh admin setelah reservasi disetujui</small>
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <span asp-validation-for="DriverId" class="text-danger small"></span>
                        </div>
                    </div>
                </div>
                
                <div class="d-flex justify-content-between">
                    <button type="button" class="btn btn-outline-secondary" onclick="previousStep(1)">
                        <i class="bi bi-arrow-left me-1"></i>Sebelumnya
                    </button>
                    <button type="button" class="btn btn-primary" onclick="nextStep(3)">
                        Selanjutnya <i class="bi bi-arrow-right ms-1"></i>
                    </button>
                </div>
            </div>
            
            <!-- Step 3: Schedule & Destination -->
            <div class="form-step" id="step3">
                <h6 class="text-primary mb-3">
                    <i class="bi bi-calendar-event me-2"></i>Jadwal & Tujuan
                </h6>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="StartDate" class="form-label fw-medium">
                                <i class="bi bi-calendar-plus text-muted me-1"></i>Tanggal & Waktu Mulai <span class="text-danger">*</span>
                            </label>
                            <input asp-for="StartDate" class="form-control form-control-modern" type="datetime-local" />
                            <span asp-validation-for="StartDate" class="text-danger small"></span>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="EndDate" class="form-label fw-medium">
                                <i class="bi bi-calendar-x text-muted me-1"></i>Tanggal & Waktu Selesai <span class="text-danger">*</span>
                            </label>
                            <input asp-for="EndDate" class="form-control form-control-modern" type="datetime-local" />
                            <span asp-validation-for="EndDate" class="text-danger small"></span>
                        </div>
                    </div>
                </div>
                
                <div class="form-group mb-4">
                    <label asp-for="Destination" class="form-label fw-medium">
                        <i class="bi bi-geo-alt text-muted me-1"></i>Tujuan / Lokasi <span class="text-danger">*</span>
                    </label>
                    <div class="input-group">
                        <select class="form-select form-select-modern" id="destinationSelect" onchange="handleDestinationChange()">
                            <option value="">-- Pilih Lokasi --</option>
                            <option value="Kantor Pusat Jakarta">Kantor Pusat Jakarta</option>
                            <option value="Kantor Cabang Surabaya">Kantor Cabang Surabaya</option>
                            <option value="Site Tambang Weda Bay">Site Tambang Weda Bay</option>
                            <option value="Site Tambang Pomalaa">Site Tambang Pomalaa</option>
                            <option value="Site Tambang Kolaka">Site Tambang Kolaka</option>
                            <option value="Site Tambang Morowali">Site Tambang Morowali</option>
                            <option value="Site Tambang Obi Island">Site Tambang Obi Island</option>
                            <option value="Site Tambang Gee">Site Tambang Gee</option>
                            <option value="Lainnya">Lokasi Lainnya</option>
                        </select>
                        <input asp-for="Destination" class="form-control form-control-modern d-none" placeholder="Masukkan tujuan/lokasi" />
                    </div>
                    <span asp-validation-for="Destination" class="text-danger small"></span>
                </div>
                
                <div class="d-flex justify-content-between">
                    <button type="button" class="btn btn-outline-secondary" onclick="previousStep(2)">
                        <i class="bi bi-arrow-left me-1"></i>Sebelumnya
                    </button>
                    <button type="button" class="btn btn-primary" onclick="nextStep(4)">
                        Selanjutnya <i class="bi bi-arrow-right ms-1"></i>
                    </button>
                </div>
            </div>
            
            <!-- Step 4: Approval -->
            <div class="form-step" id="step4">
                <h6 class="text-primary mb-3">
                    <i class="bi bi-person-check me-2"></i>Persetujuan
                </h6>
                
                <div class="alert alert-info">
                    <i class="bi bi-info-circle me-2"></i>
                    <strong>Catatan:</strong> Reservasi memerlukan persetujuan dari minimal 2 pihak yang berwenang. Pilih penyetuju sesuai dengan kebijakan perusahaan.
                </div>
                
                <div class="form-group mb-4">
                    <label asp-for="ApproverIds" class="form-label fw-medium">
                        <i class="bi bi-people-fill text-muted me-1"></i>Penyetuju <span class="text-danger">*</span>
                        <small class="text-muted">(Pilih minimal 2)</small>
                    </label>
                    <select asp-for="ApproverIds" asp-items="Model.Approvers" class="form-select form-select-modern" multiple size="5">
                    </select>
                    <span asp-validation-for="ApproverIds" class="text-danger small"></span>
                    <small class="text-muted d-block mt-1">
                        <i class="bi bi-lightbulb me-1"></i>
                        Tahan tombol Ctrl untuk memilih beberapa penyetuju
                    </small>
                </div>
                
                <div class="d-flex justify-content-between">
                    <button type="button" class="btn btn-outline-secondary" onclick="previousStep(3)">
                        <i class="bi bi-arrow-left me-1"></i>Sebelumnya
                    </button>
                    <button type="submit" class="btn btn-success btn-lg px-4" id="submitBtn">
                        <i class="bi bi-check-circle me-1"></i>Buat Reservasi
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        let currentStep = 1;
        
        $(document).ready(function() {
            // Set minimum date to today
            const now = new Date();
            const minDateTime = now.toISOString().slice(0, 16);
            $("#StartDate").attr('min', minDateTime);
            $("#EndDate").attr('min', minDateTime);
            
            // Auto-calculate end date when start date changes
            $("#StartDate").change(function() {
                const startDate = new Date($(this).val());
                if (startDate) {
                    const endDate = new Date(startDate);
                    endDate.setHours(endDate.getHours() + 4); // Default 4 hours duration
                    
                    const year = endDate.getFullYear();
                    const month = (endDate.getMonth() + 1).toString().padStart(2, '0');
                    const day = endDate.getDate().toString().padStart(2, '0');
                    const hours = endDate.getHours().toString().padStart(2, '0');
                    const minutes = endDate.getMinutes().toString().padStart(2, '0');
                    
                    $("#EndDate").val(`${year}-${month}-${day}T${hours}:${minutes}`);
                    $("#EndDate").attr('min', $(this).val());
                }
            });
            
            // Form validation
            $("#reservationForm").on('submit', function(e) {
                if (!validateCurrentStep()) {
                    e.preventDefault();
                    return false;
                }
                
                // Show loading state
                $("#submitBtn").html('<i class="bi bi-hourglass-split me-1"></i>Memproses...').prop('disabled', true);
            });
        });
        
        function nextStep(step) {
            if (validateCurrentStep()) {
                $(`#step${currentStep}`).removeClass('active');
                $(`.step-circle:nth-child(${currentStep * 2 - 1})`).removeClass('active');
                
                currentStep = step;
                $(`#step${currentStep}`).addClass('active');
                $(`.step-circle:nth-child(${currentStep * 2 - 1})`).addClass('active');
                
                // Scroll to top
                $('html, body').animate({ scrollTop: 0 }, 300);
            }
        }
        
        function previousStep(step) {
            $(`#step${currentStep}`).removeClass('active');
            $(`.step-circle:nth-child(${currentStep * 2 - 1})`).removeClass('active');
            
            currentStep = step;
            $(`#step${currentStep}`).addClass('active');
            $(`.step-circle:nth-child(${currentStep * 2 - 1})`).addClass('active');
            
            // Scroll to top
            $('html, body').animate({ scrollTop: 0 }, 300);
        }
        
        function validateCurrentStep() {
            let isValid = true;
            const currentStepElement = $(`#step${currentStep}`);
            
            // Clear previous validation
            currentStepElement.find('.is-invalid').removeClass('is-invalid');
            currentStepElement.find('.text-danger').hide();
            
            switch(currentStep) {
                case 1:
                    if (!$("#RequesterId").val()) {
                        $("#RequesterId").addClass('is-invalid');
                        isValid = false;
                    }
                    if (!$("#NumberOfPassengers").val() || $("#NumberOfPassengers").val() < 1) {
                        $("#NumberOfPassengers").addClass('is-invalid');
                        isValid = false;
                    }
                    if (!$("#Purpose").val()) {
                        $("#Purpose").addClass('is-invalid');
                        isValid = false;
                    }
                    break;
                case 2:
                    if (!$("#VehicleId").val()) {
                        $("#VehicleId").addClass('is-invalid');
                        isValid = false;
                    }
                    break;
                case 3:
                    if (!$("#StartDate").val()) {
                        $("#StartDate").addClass('is-invalid');
                        isValid = false;
                    }
                    if (!$("#EndDate").val()) {
                        $("#EndDate").addClass('is-invalid');
                        isValid = false;
                    }
                    if (!$("#Destination").val()) {
                        $("#Destination").addClass('is-invalid');
                        isValid = false;
                    }
                    // Validate dates
                    if ($("#StartDate").val() && $("#EndDate").val()) {
                        const start = new Date($("#StartDate").val());
                        const end = new Date($("#EndDate").val());
                        if (end <= start) {
                            $("#EndDate").addClass('is-invalid');
                            isValid = false;
                            alert('Tanggal selesai harus setelah tanggal mulai');
                        }
                    }
                    break;
                case 4:
                    const selectedApprovers = $("#ApproverIds").val();
                    if (!selectedApprovers || selectedApprovers.length < 2) {
                        $("#ApproverIds").addClass('is-invalid');
                        isValid = false;
                        alert('Pilih minimal 2 penyetuju');
                    }
                    break;
            }
            
            if (!isValid) {
                // Show validation errors
                currentStepElement.find('.text-danger').show();
            }
            
            return isValid;
        }
        
        function handlePurposeChange() {
            const purpose = $("#Purpose").val();
            if (purpose === "Lainnya") {
                $("#customPurposeDiv").show();
                $("#customPurpose").prop('required', true);
            } else {
                $("#customPurposeDiv").hide();
                $("#customPurpose").prop('required', false);
                if (purpose) {
                    $("#Purpose").val(purpose);
                }
            }
        }
        
        function handleDestinationChange() {
            const destination = $("#destinationSelect").val();
            if (destination === "Lainnya") {
                $("#destinationSelect").addClass('d-none');
                $("#Destination").removeClass('d-none').val('').focus();
            } else {
                $("#Destination").val(destination);
            }
        }
          function updateAvailableDrivers() {
            // This function can be enhanced to filter drivers based on selected vehicle
            // For now, it's a placeholder for future enhancement
            const vehicleId = $("#VehicleId").val();
            if (vehicleId) {
                // Could make an AJAX call to get available drivers for the selected vehicle
                console.log('Selected vehicle:', vehicleId);
            }
        }
        
        // Load vehicle and driver data on page load
        $(document).ready(function() {
            loadVehicleCards();
            loadDriverCards();
        });
        
        function loadVehicleCards() {
            const vehicles = [];
            const vehicleSelect = $("#VehicleId");
            
            // Extract vehicle data from the existing select options
            vehicleSelect.find('option').each(function() {
                if ($(this).val()) {
                    vehicles.push({
                        id: $(this).val(),
                        text: $(this).text()
                    });
                }
            });
            
            if (vehicles.length === 0) {
                $("#vehicleCardsContainer").html(`
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        <strong>Tidak ada kendaraan tersedia.</strong> Pastikan data kendaraan telah diinisialisasi di database.
                    </div>
                `);
                return;
            }
            
            let vehicleCardsHTML = '<div class="row g-3">';
              vehicles.forEach(function(vehicle) {
                // Parse vehicle info - improved parsing for better display
                let vehicleInfo, location, brand, model, registration, vehicleType;
                
                // Handle format: "Brand Model (Registration) - Location - Type"
                const mainParts = vehicle.text.split(' - ');
                
                if (mainParts.length >= 2) {
                    const vehiclePart = mainParts[0];
                    location = mainParts[1] || 'Lokasi tidak diketahui';
                    vehicleType = mainParts[2] || 'Kendaraan Operasional';
                    
                    // Extract registration from parentheses
                    const regMatch = vehiclePart.match(/\(([^)]+)\)/);
                    registration = regMatch ? regMatch[1] : 'N/A';
                    
                    // Extract brand and model (everything before the registration)
                    const nameAndModel = vehiclePart.replace(/\s*\([^)]+\)/, '').trim();
                    const nameParts = nameAndModel.split(' ');
                    brand = nameParts[0] || 'Unknown';
                    model = nameParts.slice(1).join(' ') || 'Model';
                } else {
                    // Fallback parsing
                    vehicleInfo = vehicle.text;
                    location = 'Lokasi tidak diketahui';
                    brand = 'Kendaraan';
                    model = 'Operasional';
                    registration = 'N/A';
                    vehicleType = 'Umum';
                }
                
                // Determine vehicle icon based on type or name
                let vehicleIcon = 'bi-truck';
                const lowerText = vehicle.text.toLowerCase();
                if (lowerText.includes('bus') || lowerText.includes('mikrolet')) {
                    vehicleIcon = 'bi-bus-front';
                } else if (lowerText.includes('pickup') || lowerText.includes('hilux')) {
                    vehicleIcon = 'bi-truck';
                } else if (lowerText.includes('sedan') || lowerText.includes('avanza')) {
                    vehicleIcon = 'bi-car-front';
                } else if (lowerText.includes('excavator') || lowerText.includes('dump')) {
                    vehicleIcon = 'bi-truck';
                }
                
                vehicleCardsHTML += `
                    <div class="col-md-6 col-lg-4">
                        <div class="vehicle-card card h-100" data-vehicle-id="${vehicle.id}" onclick="selectVehicle('${vehicle.id}', '${vehicle.text.replace(/'/g, "\\'")}')">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start mb-3">
                                    <div class="vehicle-icon">
                                        <i class="bi ${vehicleIcon} text-primary fs-1"></i>
                                    </div>
                                    <div class="vehicle-status">
                                        <span class="badge bg-success">
                                            <i class="bi bi-check-circle me-1"></i>Tersedia
                                        </span>
                                    </div>
                                </div>
                                <h6 class="card-title mb-2 text-dark">${brand} ${model}</h6>
                                <div class="vehicle-details">
                                    <p class="mb-1">
                                        <small class="text-muted">
                                            <i class="bi bi-card-text me-1"></i>
                                            <strong>Plat:</strong> ${registration}
                                        </small>
                                    </p>
                                    <p class="mb-1">
                                        <small class="text-muted">
                                            <i class="bi bi-geo-alt me-1"></i>
                                            <strong>Lokasi:</strong> ${location}
                                        </small>
                                    </p>
                                    <p class="mb-0">
                                        <small class="text-muted">
                                            <i class="bi bi-tag me-1"></i>
                                            <strong>Tipe:</strong> ${vehicleType}
                                        </small>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            });
            
            vehicleCardsHTML += '</div>';
            $("#vehicleCardsContainer").html(vehicleCardsHTML);
        }
        
        function loadDriverCards() {
            const drivers = [];
            const driverSelect = $("#DriverId");
            
            // Extract driver data from the existing select options
            driverSelect.find('option').each(function() {
                if ($(this).val()) {
                    drivers.push({
                        id: $(this).val(),
                        text: $(this).text()
                    });
                }
            });
            
            let driverCardsHTML = '<div class="row g-3">';
            
            if (drivers.length > 0) {
                drivers.forEach(function(driver) {
                    // Parse driver info (assuming format: "Name - License Type")
                    const parts = driver.text.split(' - ');
                    const driverName = parts[0] || driver.text;
                    const licenseType = parts[1] || 'SIM A';
                      driverCardsHTML += `
                        <div class="col-md-6 col-lg-4">
                            <div class="driver-card card h-100" data-driver-id="${driver.id}" onclick="selectDriver('${driver.id}', '${driver.text}')">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <div class="driver-icon">
                                            <i class="bi bi-person-circle text-info fs-2"></i>
                                        </div>
                                        <div class="driver-status">
                                            <span class="badge bg-success">Tersedia</span>
                                        </div>
                                    </div>
                                    <div class="form-check position-absolute" style="top: 10px; left: 10px;">
                                        <input class="form-check-input driver-radio" type="radio" name="driverSelection" value="${driver.id}" id="driver_${driver.id}">
                                    </div>
                                    <h6 class="card-title mb-1">${driverName}</h6>
                                    <p class="card-text">
                                        <small class="text-muted">
                                            <i class="bi bi-credit-card me-1"></i>Lisensi: ${licenseType}
                                        </small>
                                    </p>
                                </div>
                            </div>
                        </div>
                    `;
                });
            }
            
            driverCardsHTML += '</div>';
            $("#driverCardsContainer").html(driverCardsHTML);
        }
        
        function selectVehicle(vehicleId, vehicleText) {
            // Update the hidden select
            $("#VehicleId").val(vehicleId);
            
            // Update visual selection
            $(".vehicle-card").removeClass('selected');
            $(`.vehicle-card[data-vehicle-id="${vehicleId}"]`).addClass('selected');
            
            // Show selected vehicle display
            const parts = vehicleText.split(' - ');
            const vehicleInfo = parts[0] || vehicleText;
            const location = parts[1] || 'Lokasi tidak diketahui';
            
            const vehicleParts = vehicleInfo.split(' (');
            const nameAndModel = vehicleParts[0] || vehicleInfo;
            const registration = vehicleParts[1] ? vehicleParts[1].replace(')', '') : 'N/A';
            
            $("#selectedVehicleInfo").html(`
                <div class="d-flex align-items-center">
                    <i class="bi bi-truck text-success fs-3 me-3"></i>
                    <div>
                        <h6 class="mb-1">${nameAndModel}</h6>
                        <small class="text-muted">
                            <i class="bi bi-card-text me-1"></i>Plat: ${registration} | 
                            <i class="bi bi-geo-alt me-1"></i>Lokasi: ${location}
                        </small>
                    </div>
                </div>
            `);
            
            $("#selectedVehicleDisplay").removeClass('d-none');
            
            // Update available drivers based on selected vehicle
            updateAvailableDrivers();
        }
          function selectDriver(driverId, driverText) {
            // Update the hidden select
            $("#DriverId").val(driverId);
            
            // Update visual selection
            $(".driver-card").removeClass('selected');
            $(`.driver-card[data-driver-id="${driverId}"]`).addClass('selected');
            
            // Update radio button
            $(`#driver_${driverId}`).prop('checked', true);
            
            // Show selected driver display
            const parts = driverText.split(' - ');
            const driverName = parts[0] || driverText;
            const licenseType = parts[1] || 'SIM A';
            
            $("#selectedDriverInfo").html(`
                <div class="d-flex align-items-center">
                    <i class="bi bi-person-circle text-info fs-3 me-3"></i>
                    <div>
                        <h6 class="mb-1">${driverName}</h6>
                        <small class="text-muted">
                            <i class="bi bi-credit-card me-1"></i>Lisensi: ${licenseType}
                        </small>
                    </div>
                </div>
            `);
            
            $("#selectedDriverDisplay").removeClass('d-none');
        }
          function selectNoDriver() {
            // Clear driver selection
            $("#DriverId").val('');
            $(".driver-card").removeClass('selected');
            $("#selectedDriverDisplay").addClass('d-none');
            
            // Check "no driver" option
            $("#noDriverOption").prop('checked', true);
            
            // Uncheck all driver radio buttons
            $(".driver-radio").prop('checked', false);
        }
          // Handle no driver option selection
        $("#noDriverOption").change(function() {
            if ($(this).is(':checked')) {
                selectNoDriver();
            }
        });
        
        // Handle driver radio button clicks
        $(document).on('change', '.driver-radio', function() {
            if ($(this).is(':checked')) {
                const driverId = $(this).val();
                const driverCard = $(`.driver-card[data-driver-id="${driverId}"]`);
                const driverText = driverCard.find('.card-title').text() + ' - SIM A'; // Simplified for now
                selectDriver(driverId, driverText);
            }
        });
    </script>
      <style>
        :root {
            --mining-primary: #1a365d;
            --mining-secondary: #2d5a87;
            --mining-accent: #0ea5e9;
            --mining-success: #16a34a;
            --mining-warning: #f59e0b;
            --mining-danger: #dc2626;
        }
        
        .form-step {
            display: none;
        }
        
        .form-step.active {
            display: block;
            animation: fadeIn 0.3s ease-in;
        }
        
        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .step-circle {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background-color: #e9ecef;
            color: #6c757d;
            display: flex;
            align-items: center;
            justify-content-center;
            margin: 0 auto;
            font-size: 1.2rem;
            transition: all 0.3s ease;
        }
        
        .step-circle.active {
            background-color: var(--mining-primary);
            color: white;
            transform: scale(1.1);
        }
        
        .form-control-modern,
        .form-select-modern {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 12px 16px;
            transition: all 0.3s ease;
        }
        
        .form-control-modern:focus,
        .form-select-modern:focus {
            border-color: var(--mining-primary);
            box-shadow: 0 0 0 0.2rem rgba(26, 54, 93, 0.25);
        }
        
        .form-label {
            color: #495057;
            margin-bottom: 8px;
        }
        
        .modern-card {
            border: none;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.07);
            border-radius: 12px;
        }
        
        .bg-gradient-primary {
            background: linear-gradient(135deg, var(--mining-primary), var(--mining-secondary));
        }
        
        .is-invalid {
            border-color: #dc3545 !important;
            box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25) !important;
        }
        
        .btn:hover {
            transform: translateY(-1px);
        }
          .alert {
            border-left: 4px solid #0dcaf0;
            border-radius: 8px;
        }
          /* Vehicle and Driver Card Styles */
        .vehicle-card,
        .driver-card {
            cursor: pointer;
            transition: all 0.3s ease;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            position: relative;
        }
        
        .vehicle-card:hover,
        .driver-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
            border-color: var(--mining-primary);
        }
        
        .vehicle-card.selected,
        .driver-card.selected {
            border-color: var(--mining-primary);
            background-color: rgba(26, 54, 93, 0.05);
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(26, 54, 93, 0.2);
        }
        
        .vehicle-card.selected .vehicle-icon i,
        .driver-card.selected .driver-icon i {
            color: var(--mining-primary) !important;
        }
        
        .driver-card .form-check {
            background-color: rgba(255, 255, 255, 0.9);
            border-radius: 50%;
            padding: 5px;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .driver-card .form-check-input {
            margin: 0;
        }
        
        .vehicle-selection-container,
        .driver-selection-container {
            margin-bottom: 1rem;
        }
        
        .selected-vehicle-display,
        .selected-driver-display {
            margin-top: 1rem;
            animation: fadeIn 0.4s ease-in;
        }
        
        .no-driver-option {
            border-top: 1px solid #e9ecef;
            padding-top: 1rem;
        }
        
        .no-driver-option .form-check {
            padding: 1rem;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .no-driver-option .form-check:hover {
            border-color: #6c757d;
            background-color: #f8f9fa;
        }
        
        .no-driver-option .form-check-input:checked ~ .form-check-label {
            color: var(--mining-primary);
            font-weight: 500;
        }
        
        .vehicle-icon,
        .driver-icon {
            margin-bottom: 0.5rem;
        }
        
        .vehicle-status,
        .driver-status {
            font-size: 0.75rem;
        }
        
        .card-title {
            font-size: 1rem;
            font-weight: 600;
            color: #2c3e50;
        }
        
        .badge {
            font-size: 0.7rem;
            padding: 0.25rem 0.5rem;
        }
        
        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .vehicle-card,
            .driver-card {
                margin-bottom: 1rem;
            }
            
            .col-md-6.col-lg-4 {
                margin-bottom: 1rem;
            }
        }
    </style>
}