@model VehicleReservationSystem.ViewModels.ReservationViewModel

@{
    ViewData["Title"] = "Buat Reservasi Baru";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <d                                <!-- No Driver Option -->
                                <div class="no-driver-option mt-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="driverSelection" id="noDriverOption" value="" checked onclick="selectNoDriver()">
                                        <label class="form-check-label" for="noDriverOption">
                                            <strong>Tentukan pengemudi nanti</strong>
                                            <br><small class="text-muted">Pengemudi akan ditentukan oleh admin setelah reservasi disetujui</small>
                                        </label>
                                    </div>
                                </div>   <h1 class="mb-1">
            <i class="bi bi-plus-circle text-primary me-2"></i>Buat Reservasi Kendaraan
        </h1>
        <p class="text-muted mb-0">
            <i class="bi bi-info-circle me-1"></i>Isi formulir di bawah untuk membuat reservasi kendaraan operasional
        </p>
    </div>
    <div>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-1"></i>Kembali ke Daftar
        </a>
    </div>
</div>

<!-- Progress Steps -->
<div class="card mb-4">
    <div class="card-body">
        <div class="row text-center">
            <div class="col-3">
                <div class="step-circle active">
                    <i class="bi bi-person-fill"></i>
                </div>
                <small class="text-muted d-block mt-2">Informasi Pemohon</small>
            </div>
            <div class="col-3">
                <div class="step-circle">
                    <i class="bi bi-truck"></i>
                </div>
                <small class="text-muted d-block mt-2">Pilih Kendaraan</small>
            </div>
            <div class="col-3">
                <div class="step-circle">
                    <i class="bi bi-calendar-event"></i>
                </div>
                <small class="text-muted d-block mt-2">Jadwal & Tujuan</small>
            </div>
            <div class="col-3">
                <div class="step-circle">
                    <i class="bi bi-check-circle"></i>
                </div>
                <small class="text-muted d-block mt-2">Persetujuan</small>
            </div>
        </div>
    </div>
</div>

<div class="card modern-card">
    <div class="card-header bg-gradient-primary text-white">
        <h5 class="mb-0">
            <i class="bi bi-clipboard-data me-2"></i>Detail Reservasi
        </h5>
    </div>
    <div class="card-body">
        <form asp-action="Create" method="post" id="reservationForm">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger d-none"></div>
            
            <!-- Step 1: Requester Information -->
            <div class="form-step active" id="step1">
                <h6 class="text-primary mb-3">
                    <i class="bi bi-person-badge me-2"></i>Informasi Pemohon
                </h6>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="RequesterId" class="form-label fw-medium">
                                <i class="bi bi-person text-muted me-1"></i>Pemohon <span class="text-danger">*</span>
                            </label>
                            <select asp-for="RequesterId" asp-items="Model.Users" class="form-select form-select-modern">
                                <option value="">-- Pilih Pemohon --</option>
                            </select>
                            <span asp-validation-for="RequesterId" class="text-danger small"></span>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="NumberOfPassengers" class="form-label fw-medium">
                                <i class="bi bi-people text-muted me-1"></i>Jumlah Penumpang <span class="text-danger">*</span>
                            </label>
                            <input asp-for="NumberOfPassengers" class="form-control form-control-modern" placeholder="Masukkan jumlah penumpang" />
                            <span asp-validation-for="NumberOfPassengers" class="text-danger small"></span>
                            <small class="text-muted">Termasuk pengemudi</small>
                        </div>
                    </div>
                </div>
                
                <div class="form-group mb-3">
                    <label asp-for="Purpose" class="form-label fw-medium">
                        <i class="bi bi-clipboard-check text-muted me-1"></i>Tujuan Penggunaan <span class="text-danger">*</span>
                    </label>
                    <select asp-for="Purpose" class="form-select form-select-modern" onchange="handlePurposeChange()">
                        <option value="">-- Pilih Tujuan --</option>
                        <option value="Inspeksi Tambang">Inspeksi Tambang</option>
                        <option value="Transportasi Karyawan">Transportasi Karyawan</option>
                        <option value="Pengiriman Material">Pengiriman Material</option>
                        <option value="Kunjungan Klien">Kunjungan Klien</option>
                        <option value="Rapat Eksternal">Rapat Eksternal</option>
                        <option value="Pengambilan Sample">Pengambilan Sample</option>
                        <option value="Lainnya">Lainnya</option>
                    </select>
                    <span asp-validation-for="Purpose" class="text-danger small"></span>
                </div>
                
                <div class="form-group mb-4" id="customPurposeDiv" style="display: none;">
                    <label class="form-label fw-medium">
                        <i class="bi bi-pencil text-muted me-1"></i>Jelaskan Tujuan Lainnya
                    </label>
                    <input type="text" class="form-control form-control-modern" id="customPurpose" placeholder="Jelaskan tujuan penggunaan kendaraan" />
                </div>
                
                <div class="d-flex justify-content-end">
                    <button type="button" class="btn btn-primary" onclick="nextStep(2)">
                        Selanjutnya <i class="bi bi-arrow-right ms-1"></i>
                    </button>
                </div>
            </div>
              <!-- Step 2: Vehicle Selection -->
            <div class="form-step" id="step2">
                <h6 class="text-primary mb-3">
                    <i class="bi bi-truck me-2"></i>Pilih Kendaraan & Pengemudi
                </h6>
                
                <div class="row">
                    <div class="col-12">
                        <div class="form-group mb-4">
                            <label asp-for="VehicleId" class="form-label fw-medium">
                                <i class="bi bi-truck text-muted me-1"></i>Pilih Kendaraan <span class="text-danger">*</span>
                            </label>
                            <div class="vehicle-selection-container">
                                <select asp-for="VehicleId" asp-items="Model.Vehicles" class="form-select form-select-modern d-none" onchange="updateVehicleDisplay(); updateAvailableDrivers()">
                                    <option value="">-- Pilih Kendaraan --</option>
                                </select>
                                
                                <!-- Custom Vehicle Cards Display -->
                                <div class="vehicle-cards-container" id="vehicleCardsContainer">
                                    <div class="alert alert-info">
                                        <i class="bi bi-info-circle me-2"></i>
                                        <strong>Memuat data kendaraan...</strong> Pastikan database telah diinisialisasi dengan data kendaraan.
                                    </div>
                                </div>
                                
                                <!-- Selected Vehicle Display -->
                                <div class="selected-vehicle-display d-none" id="selectedVehicleDisplay">
                                    <div class="card border-success">
                                        <div class="card-header bg-success text-white">
                                            <h6 class="mb-0">
                                                <i class="bi bi-check-circle me-1"></i>Kendaraan Terpilih
                                            </h6>
                                        </div>
                                        <div class="card-body" id="selectedVehicleInfo">
                                            <!-- Vehicle info will be populated by JavaScript -->
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <span asp-validation-for="VehicleId" class="text-danger small"></span>
                        </div>
                    </div>
                    
                    <div class="col-12">
                        <div class="form-group mb-3">
                            <label asp-for="DriverId" class="form-label fw-medium">
                                <i class="bi bi-person-gear text-muted me-1"></i>Pilih Pengemudi
                                <small class="text-muted">(Opsional - dapat ditentukan kemudian)</small>
                            </label>
                            <div class="driver-selection-container">
                                <select asp-for="DriverId" asp-items="Model.Drivers" class="form-select form-select-modern d-none">
                                    <option value="">-- Pilih Pengemudi --</option>
                                </select>
                                
                                <!-- Custom Driver Cards Display -->
                                <div class="driver-cards-container" id="driverCardsContainer">
                                    <div class="alert alert-info">
                                        <i class="bi bi-info-circle me-2"></i>
                                        <strong>Memuat data pengemudi...</strong> Pastikan database telah diinisialisasi dengan data pengemudi.
                                    </div>
                                </div>
                                
                                <!-- Selected Driver Display -->
                                <div class="selected-driver-display d-none" id="selectedDriverDisplay">
                                    <div class="card border-info">
                                        <div class="card-header bg-info text-white">
                                            <h6 class="mb-0">
                                                <i class="bi bi-check-circle me-1"></i>Pengemudi Terpilih
                                            </h6>
                                        </div>
                                        <div class="card-body" id="selectedDriverInfo">
                                            <!-- Driver info will be populated by JavaScript -->
                                        </div>
                                    </div>
                                </div>
                                  <!-- No Driver Option -->
                                <div class="no-driver-option mt-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="driverSelection" id="noDriverOption" value="" onclick="selectNoDriver()">
                                        <label class="form-check-label" for="noDriverOption">
                                            <strong>Tentukan pengemudi nanti</strong>
                                            <br><small class="text-muted">Pengemudi akan ditentukan oleh admin setelah reservasi disetujui</small>
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <span asp-validation-for="DriverId" class="text-danger small"></span>
                        </div>
                    </div>
                </div>
                
                <div class="d-flex justify-content-between">
                    <button type="button" class="btn btn-outline-secondary" onclick="previousStep(1)">
                        <i class="bi bi-arrow-left me-1"></i>Sebelumnya
                    </button>
                    <button type="button" class="btn btn-primary" onclick="nextStep(3)">
                        Selanjutnya <i class="bi bi-arrow-right ms-1"></i>
                    </button>
                </div>
            </div>
            
            <!-- Step 3: Schedule & Destination -->
            <div class="form-step" id="step3">
                <h6 class="text-primary mb-3">
                    <i class="bi bi-calendar-event me-2"></i>Jadwal & Tujuan
                </h6>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="StartDate" class="form-label fw-medium">
                                <i class="bi bi-calendar-plus text-muted me-1"></i>Tanggal & Waktu Mulai <span class="text-danger">*</span>
                            </label>
                            <input asp-for="StartDate" class="form-control form-control-modern" type="datetime-local" />
                            <span asp-validation-for="StartDate" class="text-danger small"></span>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="EndDate" class="form-label fw-medium">
                                <i class="bi bi-calendar-x text-muted me-1"></i>Tanggal & Waktu Selesai <span class="text-danger">*</span>
                            </label>
                            <input asp-for="EndDate" class="form-control form-control-modern" type="datetime-local" />
                            <span asp-validation-for="EndDate" class="text-danger small"></span>
                        </div>
                    </div>
                </div>
                
                <div class="form-group mb-4">
                    <label asp-for="Destination" class="form-label fw-medium">
                        <i class="bi bi-geo-alt text-muted me-1"></i>Tujuan / Lokasi <span class="text-danger">*</span>
                    </label>
                    <div class="input-group">
                        <select class="form-select form-select-modern" id="destinationSelect" onchange="handleDestinationChange()">
                            <option value="">-- Pilih Lokasi --</option>
                            <option value="Kantor Pusat Jakarta">Kantor Pusat Jakarta</option>
                            <option value="Kantor Cabang Surabaya">Kantor Cabang Surabaya</option>
                            <option value="Site Tambang Weda Bay">Site Tambang Weda Bay</option>
                            <option value="Site Tambang Pomalaa">Site Tambang Pomalaa</option>
                            <option value="Site Tambang Kolaka">Site Tambang Kolaka</option>
                            <option value="Site Tambang Morowali">Site Tambang Morowali</option>
                            <option value="Site Tambang Obi Island">Site Tambang Obi Island</option>
                            <option value="Site Tambang Gee">Site Tambang Gee</option>
                            <option value="Lainnya">Lokasi Lainnya</option>
                        </select>
                        <input asp-for="Destination" class="form-control form-control-modern d-none" placeholder="Masukkan tujuan/lokasi" />
                    </div>
                    <span asp-validation-for="Destination" class="text-danger small"></span>
                </div>
                
                <div class="d-flex justify-content-between">
                    <button type="button" class="btn btn-outline-secondary" onclick="previousStep(2)">
                        <i class="bi bi-arrow-left me-1"></i>Sebelumnya
                    </button>
                    <button type="button" class="btn btn-primary" onclick="nextStep(4)">
                        Selanjutnya <i class="bi bi-arrow-right ms-1"></i>
                    </button>
                </div>
            </div>
            
            <!-- Step 4: Approval -->
            <div class="form-step" id="step4">
                <h6 class="text-primary mb-3">
                    <i class="bi bi-person-check me-2"></i>Persetujuan
                </h6>
                
                <div class="alert alert-info">
                    <i class="bi bi-info-circle me-2"></i>
                    <strong>Catatan:</strong> Reservasi memerlukan persetujuan dari minimal 2 pihak yang berwenang. Pilih penyetuju sesuai dengan kebijakan perusahaan.
                </div>
                
                <div class="form-group mb-4">
                    <label asp-for="ApproverIds" class="form-label fw-medium">
                        <i class="bi bi-people-fill text-muted me-1"></i>Penyetuju <span class="text-danger">*</span>
                        <small class="text-muted">(Pilih minimal 2)</small>
                    </label>
                    <select asp-for="ApproverIds" asp-items="Model.Approvers" class="form-select form-select-modern" multiple size="5">
                    </select>
                    <span asp-validation-for="ApproverIds" class="text-danger small"></span>
                    <small class="text-muted d-block mt-1">
                        <i class="bi bi-lightbulb me-1"></i>
                        Tahan tombol Ctrl untuk memilih beberapa penyetuju
                    </small>
                </div>
                
                <div class="d-flex justify-content-between">
                    <button type="button" class="btn btn-outline-secondary" onclick="previousStep(3)">
                        <i class="bi bi-arrow-left me-1"></i>Sebelumnya
                    </button>
                    <button type="submit" class="btn btn-success btn-lg px-4" id="submitBtn">
                        <i class="bi bi-check-circle me-1"></i>Buat Reservasi
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        let currentStep = 1;
        
        $(document).ready(function() {
            // Set minimum date to today
            const now = new Date();
            const minDateTime = now.toISOString().slice(0, 16);
            $("#StartDate").attr('min', minDateTime);
            $("#EndDate").attr('min', minDateTime);

            // Load initial vehicle and driver cards
            loadVehicleCards();
            loadDriverCards();
            // Check the "no driver" option by default
            $("#noDriverOption").prop("checked", true);
            selectNoDriver(); // Ensure UI reflects this state

            // Auto-calculate end date when start date changes
            $("#StartDate").change(function() {
                const startDate = new Date($(this).val());
                if (startDate) {
                    const endDate = new Date(startDate);
                    endDate.setHours(endDate.getHours() + 4); // Default 4 hours duration
                    
                    const year = endDate.getFullYear();
                    const month = (endDate.getMonth() + 1).toString().padStart(2, '0');
                    const day = endDate.getDate().toString().padStart(2, '0');
                    const hours = endDate.getHours().toString().padStart(2, '0');
                    const minutes = endDate.getMinutes().toString().padStart(2, '0');
                    
                    $("#EndDate").val(`${year}-${month}-${day}T${hours}:${minutes}`);
                    $("#EndDate").attr('min', $(this).val());
                }
            });
            
            // Form validation
            $("#reservationForm").on('submit', function(e) {
                if (!validateCurrentStep()) {
                    e.preventDefault();
                    return false;
                }
                
                // Show loading state
                $("#submitBtn").html('<i class="bi bi-hourglass-split me-1"></i>Memproses...').prop('disabled', true);
            });
        });
        
        function nextStep(step) {
            if (validateCurrentStep()) {
                $(`#step${currentStep}`).removeClass('active');
                $(`.step-circle:nth-child(${currentStep * 2 - 1})`).removeClass('active');
                
                currentStep = step;
                $(`#step${currentStep}`).addClass('active');
                $(`.step-circle:nth-child(${currentStep * 2 - 1})`).addClass('active');
                
                // Scroll to top
                $('html, body').animate({ scrollTop: 0 }, 300);
            }
        }
        
        function previousStep(step) {
            $(`#step${currentStep}`).removeClass('active');
            $(`.step-circle:nth-child(${currentStep * 2 - 1})`).removeClass('active');
            
            currentStep = step;
            $(`#step${currentStep}`).addClass('active');
            $(`.step-circle:nth-child(${currentStep * 2 - 1})`).addClass('active');
            
            // Scroll to top
            $('html, body').animate({ scrollTop: 0 }, 300);
        }
        
        function validateCurrentStep() {
            let isValid = true;
            const currentStepElement = $(`#step${currentStep}`);
            
            // Clear previous validation
            currentStepElement.find('.is-invalid').removeClass('is-invalid');
            currentStepElement.find('.text-danger').hide();
            
            switch(currentStep) {
                case 1:
                    if (!$("#RequesterId").val()) {
                        $("#RequesterId").addClass('is-invalid');
                        isValid = false;
                    }
                    if (!$("#NumberOfPassengers").val() || $("#NumberOfPassengers").val() < 1) {
                        $("#NumberOfPassengers").addClass('is-invalid');
                        isValid = false;
                    }
                    if (!$("#Purpose").val()) {
                        $("#Purpose").addClass('is-invalid');
                        isValid = false;
                    }
                    break;
                case 2:
                    if (!$("#VehicleId").val()) {
                        $("#VehicleId").addClass('is-invalid');
                        isValid = false;
                    }
                    break;
                case 3:
                    if (!$("#StartDate").val()) {
                        $("#StartDate").addClass('is-invalid');
                        isValid = false;
                    }
                    if (!$("#EndDate").val()) {
                        $("#EndDate").addClass('is-invalid');
                        isValid = false;
                    }
                    if (!$("#Destination").val()) {
                        $("#Destination").addClass('is-invalid');
                        isValid = false;
                    }
                    // Validate dates
                    if ($("#StartDate").val() && $("#EndDate").val()) {
                        const start = new Date($("#StartDate").val());
                        const end = new Date($("#EndDate").val());
                        if (end <= start) {
                            $("#EndDate").addClass('is-invalid');
                            isValid = false;
                            alert('Tanggal selesai harus setelah tanggal mulai');
                        }
                    }
                    break;
                case 4:
                    const selectedApprovers = $("#ApproverIds").val();
                    if (!selectedApprovers || selectedApprovers.length < 2) {
                        $("#ApproverIds").addClass('is-invalid');
                        isValid = false;
                        alert('Pilih minimal 2 penyetuju');
                    }
                    break;
            }
            
            if (!isValid) {
                // Show validation errors
                currentStepElement.find('.text-danger').show();
            }
            
            return isValid;
        }
        
        function handlePurposeChange() {
            const purpose = $("#Purpose").val();
            if (purpose === "Lainnya") {
                $("#customPurposeDiv").show();
                $("#customPurpose").prop('required', true);
            } else {
                $("#customPurposeDiv").hide();
                $("#customPurpose").prop('required', false);
                if (purpose) {
                    $("#Purpose").val(purpose);
                }
            }
        }
        
        function handleDestinationChange() {
            const destination = $("#destinationSelect").val();
            if (destination === "Lainnya") {
                $("#destinationSelect").addClass('d-none');
                $("#Destination").removeClass('d-none').val('').focus();
            } else {
                $("#Destination").val(destination);
                // If a predefined location is selected, ensure the hidden input is not d-none
                // and the select is visible (though it might be redundant if it's already visible)
                $("#destinationSelect").removeClass('d-none');
                $("#Destination").addClass('d-none'); // Hide the text input if a selection is made
            }
        }

        function getVehicleIcon(vehicleType) {
            if (!vehicleType) return '<i class="bi bi-truck text-secondary"></i>';
            const typeLower = vehicleType.toLowerCase();
            if (typeLower.includes('double cabin') || typeLower.includes('dcab')) return '<i class="bi bi-truck-front-fill text-primary"></i>';
            if (typeLower.includes('suv') || typeLower.includes('mpv')) return '<i class="bi bi-car-front-fill text-info"></i>';
            if (typeLower.includes('bus')) return '<i class="bi bi-bus-front-fill text-warning"></i>';
            if (typeLower.includes('truck') || typeLower.includes('truk')) return '<i class="bi bi-truck text-danger"></i>';
            if (typeLower.includes('motor') || typeLower.includes('bike')) return '<i class="bi bi-bicycle text-success"></i>';
            if (typeLower.includes('ambulance')) return '<i class="bi bi-bandaid-fill text-danger"></i>';
            return '<i class="bi bi-truck text-secondary"></i>';
        }

        function parseVehicleText(text) {
            if (!text) return { name: "N/A", registration: "N/A", type: "Unknown", details: "N/A" };

            const parts = text.split(' - ');
            let name = parts[0] || "N/A";
            let registration = parts[1] || "N/A";
            let type = "Unknown";
            let details = text;

            // Try to extract type from name (e.g., "Toyota Hilux Double Cabin")
            const nameParts = name.split(' ');
            if (nameParts.length > 2) {
                 // Heuristic: if "Double Cabin", "SUV", "Bus", "Truck" is in the name, use it.
                const potentialType = nameParts.slice(2).join(' ');
                if (potentialType.toLowerCase().includes('double cabin') ||
                    potentialType.toLowerCase().includes('suv') ||
                    potentialType.toLowerCase().includes('mpv') ||
                    potentialType.toLowerCase().includes('bus') ||
                    potentialType.toLowerCase().includes('truck')) {
                    type = potentialType;
                } else if (nameParts.length > 1) {
                    // Fallback: use the second word as a potential model/type if specific keywords not found
                    type = nameParts[1];
                }
            } else if (nameParts.length > 1) {
                type = nameParts[1]; // e.g. Hilux from "Toyota Hilux"
            }


            return { name, registration, type, details: text };
        }

        function loadVehicleCards() {
            const vehicleSelect = $("#VehicleId");
            const container = $("#vehicleCardsContainer");
            container.empty(); // Clear previous cards or loading message

            if (vehicleSelect.children('option').length <= 1) { // <=1 because of "-- Pilih Kendaraan --"
                container.html('<div class="alert alert-warning"><i class="bi bi-exclamation-triangle me-2"></i>Tidak ada kendaraan tersedia atau data belum dimuat.</div>');
                return;
            }

            vehicleSelect.children('option').each(function() {
                if ($(this).val() === "") return; // Skip the placeholder option

                const vehicleValue = $(this).val();
                const vehicleText = $(this).text();
                const parsed = parseVehicleText(vehicleText);

                const cardHtml = `
                    <div class="col-md-6 col-lg-4 mb-3">
                        <div class="card vehicle-card h-100" data-value="${vehicleValue}" onclick="selectVehicle('${vehicleValue}', '${escape(vehicleText)}')">
                            <div class="card-body">
                                <div class="d-flex align-items-center mb-2">
                                    <div class="vehicle-icon me-3">${getVehicleIcon(parsed.type)}</div>
                                    <div>
                                        <h6 class="card-title mb-0">${parsed.name}</h6>
                                        <small class="text-muted">${parsed.registration}</small>
                                    </div>
                                </div>
                                <p class="card-text small mb-1"><strong>Tipe:</strong> ${parsed.type}</p>
                                <p class="card-text small"><strong>Status:</strong> <span class="badge bg-success-soft text-success">Tersedia</span></p>
                            </div>
                        </div>
                    </div>`;
                container.append(cardHtml);
            });
            // Ensure container is a row for proper column layout
            if (!container.hasClass('row')) {
                container.addClass('row');
            }
        }

        function selectVehicle(value, text) {
            const vehicleSelect = $("#VehicleId");
            vehicleSelect.val(value).change(); // Update hidden select and trigger change

            // Update visual selection for cards
            $(".vehicle-card").removeClass("selected-card border-primary shadow-sm");
            $(`.vehicle-card[data-value="${value}"]`).addClass("selected-card border-primary shadow-sm");

            // Update selected vehicle display
            const parsed = parseVehicleText(unescape(text));
            $("#selectedVehicleInfo").html(`
                <p class="mb-1"><strong>Nama:</strong> ${parsed.name}</p>
                <p class="mb-1"><strong>No. Registrasi:</strong> ${parsed.registration}</p>
                <p class="mb-0"><strong>Tipe:</strong> ${parsed.type}</p>
            `);
            $("#selectedVehicleDisplay").removeClass("d-none");
            
            // Trigger driver update if necessary
            updateAvailableDrivers();
        }

        function loadDriverCards() {
            const driverSelect = $("#DriverId");
            const container = $("#driverCardsContainer");
            container.empty();

            if (driverSelect.children('option').length <= 1) { // <=1 because of "-- Pilih Pengemudi --"
                 container.html('<div class="alert alert-secondary"><i class="bi bi-person-badge me-2"></i>Tidak ada data pengemudi atau belum dimuat. Anda dapat melanjutkan tanpa memilih pengemudi.</div>');
                return;
            }
            
            let hasAvailableDrivers = false;
            driverSelect.children('option').each(function() {
                if ($(this).val() === "") return; // Skip placeholder

                hasAvailableDrivers = true;
                const driverValue = $(this).val();
                const driverText = $(this).text(); // Name of the driver

                const cardHtml = `
                    <div class="col-md-6 col-lg-4 mb-3">
                        <div class="card driver-card h-100" data-value="${driverValue}" onclick="selectDriver('${driverValue}', '${escape(driverText)}')">
                            <div class="card-body text-center">
                                <i class="bi bi-person-circle fs-1 text-primary mb-2"></i>
                                <h6 class="card-title mb-1">${driverText}</h6>
                                <p class="card-text small text-muted">Lisensi: Tersedia</p>
                                 <input class="form-check-input visually-hidden" type="radio" name="driverSelection" id="driver_${driverValue}" value="${driverValue}">
                            </div>
                        </div>
                    </div>`;
                container.append(cardHtml);
            });
             if (!hasAvailableDrivers) {
                container.html('<div class="alert alert-secondary"><i class="bi bi-person-badge me-2"></i>Tidak ada pengemudi yang tersedia saat ini. Anda dapat melanjutkan tanpa memilih pengemudi.</div>');
            }

            // Ensure container is a row for proper column layout
            if (!container.hasClass('row')) {
                container.addClass('row');
            }
        }

        function selectDriver(value, text) {
            const driverSelect = $("#DriverId");
            driverSelect.val(value).change();

            // Update radio button
            $(`input[name="driverSelection"]`).prop('checked', false);
            $(`#driver_${value}`).prop('checked', true);


            $(".driver-card").removeClass("selected-card border-info shadow-sm");
            $(`.driver-card[data-value="${value}"]`).addClass("selected-card border-info shadow-sm");
            
            $("#selectedDriverInfo").html(`<p class="mb-0"><strong>Nama:</strong> ${unescape(text)}</p>`);
            $("#selectedDriverDisplay").removeClass("d-none");
            $("#noDriverOption").prop("checked", false); // Uncheck "no driver" if a driver is selected
        }

        function selectNoDriver() {
            const driverSelect = $("#DriverId");
            driverSelect.val("").change(); // Clear driver selection

            // Update radio button
            $(`input[name="driverSelection"]`).prop('checked', false);
            $("#noDriverOption").prop("checked", true);

            $(".driver-card").removeClass("selected-card border-info shadow-sm");
            $("#selectedDriverDisplay").addClass("d-none");
        }
        
        function updateVehicleDisplay() {
            // This function is largely handled by selectVehicle now.
            // It can be kept for legacy or if specific non-card updates are needed.
            const selectedVehicleVal = $("#VehicleId").val();
            if (!selectedVehicleVal) {
                $("#selectedVehicleDisplay").addClass("d-none");
            }
            // The rest of the logic is in selectVehicle
        }

        // Ensure updateAvailableDrivers is defined, even if it's a placeholder
        function updateAvailableDrivers() {
            const vehicleId = $("#VehicleId").val();
            console.log('Selected vehicle for driver filtering (if implemented):', vehicleId);
            // Placeholder: In a real scenario, this would filter drivers.
            // For now, we assume all drivers loaded are potentially available or
            // the backend handles compatibility.
            // If you were to filter, you'd call loadDriverCards() again,
            // perhaps with a parameter or by modifying the #DriverId select options first.
        }
    </script>
}
<style>
/* ... existing styles ... */

.vehicle-card, .driver-card {
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    border: 1px solid #e0e0e0; /* Softer border */
}

.vehicle-card:hover, .driver-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 15px rgba(0,0,0,0.1);
}

.selected-card {
    /* border-width: 2px; */ /* Handled by border-primary/info */
    box-shadow: 0 5px 12px rgba(0,123,255,0.2); /* Softer shadow for selected */
}

.vehicle-icon {
    font-size: 2.5rem; /* Larger icons */
}

.bg-success-soft {
    background-color: rgba(var(--bs-success-rgb), 0.15);
}
.text-success {
    color: var(--bs-success) !important;
}

/* Ensure step circles are styled */
.step-circle {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: #e9ecef;
    color: #6c757d;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto;
    font-size: 1.5rem;
    transition: all 0.3s ease;
    border: 2px solid transparent;
}

.step-circle.active {
    background-color: var(--mining-primary);
    color: white;
    border-color: var(--mining-primary-dark); /* A slightly darker border for active step */
}

/* Modern Card Styling */
.modern-card {
    border: none;
    border-radius: 0.75rem; /* Softer radius */
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1); /* Standard shadow */
    overflow: hidden; /* To ensure header radius is applied */
}

.modern-card .card-header.bg-gradient-primary {
    background: linear-gradient(45deg, var(--mining-primary), var(--mining-primary-dark));
    color: white;
    padding: 1rem 1.25rem;
    border-bottom: none; /* Remove default border */
}

.form-control-modern, .form-select-modern {
    border-radius: 0.5rem; /* Softer radius for form elements */
    border: 1px solid #ced4da;
    padding: 0.75rem 1rem; /* More padding */
    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
}
.form-control-modern:focus, .form-select-modern:focus {
    border-color: var(--mining-primary-light);
    box-shadow: 0 0 0 0.25rem rgba(var(--mining-primary-rgb), 0.25);
}

/* Styling for selected vehicle/driver display cards */
#selectedVehicleDisplay .card, #selectedDriverDisplay .card {
    border-radius: 0.5rem;
}
#selectedVehicleDisplay .card-header, #selectedDriverDisplay .card-header {
    border-top-left-radius: 0.5rem;
    border-top-right-radius: 0.5rem;
}

/* Ensure radio buttons for driver selection are visually distinct when selected via card */
.driver-card.selected-card {
    border-color: var(--bs-info) !important; /* Use Bootstrap info color for selected driver */
}

.no-driver-option .form-check-input:checked + .form-check-label {
    font-weight: bold;
    color: var(--mining-primary);
}
.no-driver-option .form-check-label {
    cursor: pointer;
}

/* Responsive adjustments for cards */
@@media (max-width: 768px) {
    .vehicle-card, .driver-card {
        margin-bottom: 1rem; /* Add some space between cards on mobile */
    }
    .vehicle-cards-container .col-md-6, .driver-cards-container .col-md-6 {
        flex: 0 0 100%; /* Full width on smaller screens */
        max-width: 100%;
    }
}
</style>